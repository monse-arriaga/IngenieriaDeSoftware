version: "3.9"  

services:

  frontend:
    build: 
      context:  
        ./frontend
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: rebuild
          path: ./frontend
    networks:
      - api
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - 8080:8080
    environment:
      - POSTGRES_DB=${DB}
      - USER=${USERNAME}
      - PASS=${PASSWORD}
    networks:
      - api
    depends_on:
      - postgres
    develop:
      watch:
        - action: rebuild
          path: ./backend

  postgres:
    image: postgres:latest  
    restart: always  
    environment:
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_USER=${USERNAME}
      - POSTGRES_DB=${DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data  
      - ./database/DDL.sql:/docker-entrypoint-initdb.d/DDL.sql
    ports:
      - "5432:5432"
    networks:
      - api
      
  adminer:
    image: adminer:latest  
    restart: unless-stopped  
    ports:
      - "8081:8080"  
    networks:
      - api

volumes:
  postgres_data:  

networks:
  api: